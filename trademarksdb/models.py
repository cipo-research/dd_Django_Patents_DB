from django.db import models
from django.contrib.postgres.indexes import GinIndex
from django.contrib.postgres.search import SearchVectorField

# Create your models here.

# Each "model" class represents a table in our database, with each field being a column
#   in its respective table.
# Each model also has a Meta subclass. These are necessary for us to be able to use full-text
#   search when querying in each table, but they have no effect on the actual structure of the
#   tables in the database

class tm_main(models.Model):
    applicationnumber = models.IntegerField(null=False, primary_key=True)
    filingdate = models.CharField(max_length=10, null=True)
    publicationdate = models.CharField(max_length=10, null=True)
    registrationdate = models.CharField(max_length=10, null=True)
    registrationofficecountrycode = models.CharField(max_length=2, null=True)
    receivingofficecountrycode = models.CharField(max_length=2, null=True)
    receivingofficedate = models.CharField(max_length=10, null=True)
    assigningofficecountrycode = models.CharField(max_length=2, null=True)
    registrationnumber = models.CharField(null=True)
    legislationcode = models.IntegerField(max_length=1, null=True)
    filingplace = models.CharField(null=True)
    applicationreferencenumber = models.CharField(null=True)
    applicationlanguagecode = models.CharField(max_length=2, null=True)
    expirydate = models.CharField(max_length=10, null=True)
    terminationdate = models.CharField(max_length=10, null=True)
    wipostatuscode = models.IntegerField(max_length=2, null=True)
    currentstatusdate = models.CharField(max_length=10, null=True)
    associationcategoryid = models.CharField(null=True)
    ipofficecode = models.CharField(max_length=2, null=True)
    associatedapplicationnumber = models.IntegerField(max_length=15, null=True)
    markcategory = models.CharField(max_length=9, null=True)
    divisionalapplicationcountrycode = models.CharField(max_length=2, null=True)
    divisionalapplicationnumber = models.IntegerField(max_length=15, null=True)
    divisionalapplicationdate = models.CharField(max_length=10, null=True)
    internationalregistrationnumber = models.IntegerField(null=True)
    marktypecode = models.IntegerField(max_length=2, null=True)
    markverbalelementtext = models.CharField(null=True)
    marksignificantverbalelementtext = models.CharField(null=True)
    marktranslationtext = models.CharField(max_length=10, null=True)
    expungementindicator = models.IntegerField(max_length=1, null=True)
    distinctivenessindicator = models.IntegerField(max_length=1, null=True)
    distinctivenessdescription = models.TextField(null=True)
    evidenceofuseindicator = models.IntegerField(max_length=1, null=True)
    evidenceofusedescription = models.TextField(null=True)
    restrictionofusedescription = models.TextField(null=True)
    cipostandardmessagedescription = models.TextField(null=True)
    oppositionstartdate = models.CharField(max_length=10, null=True)
    oppositionenddate = models.CharField(max_length=10, null=True)
    totalniceclassificationsnumber = models.IntegerField(null=True)
    foreignregistrationindicator = models.IntegerField(max_length=1, null=True)
    usedincanadaindicator = models.IntegerField(max_length=1, null=True)
    classificationtermofficecountrycode = models.CharField(max_length=2, null=True)
    classificationtermsourcecategory = models.TextField(null=True)
    classificationtermenglishdescription = models.TextField(null=True)
    publicationid = models.CharField(max_length=20, null=True)
    publicationstatus = models.CharField(max_length=20, null=True)
    authorizationofusedate = models.CharField(max_length=10, null=True)
    authorizationcode = models.IntegerField(max_length=1, null=True)
    authorizationdescription = models.TextField(null=True)
    registercode = models.IntegerField(max_length=1, null=True)
    applicationabandoneddate = models.CharField(max_length=10, null=True)
    cipostatuscode = models.IntegerField(max_length=2, null=True)
    alloweddate = models.CharField(max_length=10, null=True)
    renewaldate = models.CharField(max_length=10, null=True)
    trademarkclasscode = models.IntegerField(max_length=2, null=True)
    legislationcode = models.IntegerField(max_length=1, null=True)
    geographicalindicationkindcategorycode = models.IntegerField(max_length=1, null=True)
    geographicalindicationtranslationsequencenumber = models.IntegerField(max_length=2, null=True)
    geographicalindicationtranslationtext = models.CharField(max_length=20, null=True)
    doubtfulcaseapplicationnumber = models.IntegerField(max_length=10, null=True)
    doubtfulcaseregistrationnumber = models.CharField(max_length=10, null=True)

class tm_mark_description(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='mark_description', on_delete=models.PROTECT)
    languagecode = models.CharField(max_length=2, null=True)
    markdescription = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_cipo_classifications(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='cipo_classifications', on_delete=models.PROTECT)
    classificationkindcode = models.CharField(max_length=4, null=True)
    niceclassificationcode = models.IntegerField(max_length=2, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_applicant_classifications(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='applicant_classifications', on_delete=models.PROTECT)
    classificationsequencenumber = models.CharField(max_length=20, null=True)
    classificationindicatorlinesequencenumber = models.IntegerField(max_length=2, null=True)
    classificationindicatordescription = models.TextField(null=True)
    niceeditionnumber = models.IntegerField(max_length=2, null=True)
    niceclassificationcode = models.IntegerField(max_length=2, null=True)
    niceclassification = models.IntegerField(max_length=2, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_representation(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='representation', on_delete=models.PROTECT)
    representationtypecode = models.IntegerField(max_length=1, null=True)
    viennacode = models.IntegerField(max_length=2, null=True)
    viennadivisionnumber = models.IntegerField(max_length=2, null=True)
    viennasectionnumber = models.IntegerField(max_length=2, null=True)
    viennadescription = models.TextField(null=True)
    viennadescriptionfr = models.TextField(null=True)
    filename = models.CharField(max_length=20, null=True)
    fileformat = models.CharField(max_length=20, null=True)
    imagecolourclaimedsequencenumber = models.IntegerField(max_length=2, null=True)
    imagecolourclaimed = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_interested_party(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='interested_party', on_delete=models.PROTECT)
    partytypecode = models.IntegerField(max_length=2, null=True)
    partylanguagecode = models.CharField(max_length=2, null=True)
    partyname = models.TextField(null=True)
    partyaddressline1 = models.TextField(null=True)
    partyaddressline2 = models.TextField(null=True)
    partyaddressline3 = models.TextField(null=True)
    partyaddressline4 = models.TextField(null=True)
    partyaddressline5 = models.TextField(null=True)
    partyprovincename = models.CharField(max_length=20, null=True)
    partycountrycode = models.CharField(max_length=2, null=True)
    partypostalcode = models.CharField(max_length=6, null=True)
    contactlanguagecode = models.CharField(max_length=2, null=True)
    contactname = models.TextField(null=True)
    contactaddressline1 = models.TextField(null=True)
    contactaddressline2 = models.TextField(null=True)
    contactaddressline3 = models.TextField(null=True)
    contactprovincename = models.CharField(max_length=20, null=True)
    contactcountrycode = models.CharField(max_length=2, null=True)
    contactpostalcode = models.CharField(max_length=2, null=True)
    currentownerlegalname = models.TextField(null=True)
    agentnumber = models.IntegerField(max_length=20, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_claim(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='claim', on_delete=models.PROTECT)
    claimtext = models.TextField(null=True)
    claimtype = models.IntegerField(max_length=2, null=True)
    claimcode = models.IntegerField(max_length=2, null=True)
    structureclaimdate = models.CharField(max_length=10, null=True)
    claimyearnumber = models.IntegerField(max_length=4, null=True)
    claimmonthnumber = models.IntegerField(max_length=2, null=True)
    claimdaynumber = models.IntegerField(max_length=2, null=True)
    claimcountrycode = models.CharField(max_length=2, null=True)
    foreignregistrationnumber = models.IntegerField(max_length=10, null=True)
    goodsservicesreferenceidentifier = models.CharField(max_length=15, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_priority_claim(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='priority_claim', on_delete=models.PROTECT)
    priorityclaimtext = models.TextField(null=True)
    prioritycountrycode = models.CharField(max_length=2, null=True)
    priorityapplicationnumber = models.CharField(max_length=10, null=True)
    priorityfilingdate = models.CharField(max_length=10, null=True)
    classificationsequencenumber = models.CharField(max_length=15, null=True)
    classificationdescription = models.TextField(null=True)
    secondarysequencenumber = models.IntegerField(max_length=2, null=True)
    niceeditionnumber = models.IntegerField(max_length=2, null=True)
    niceclassificationcode = models.IntegerField(max_length=2, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_event(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='event', on_delete=models.PROTECT)
    actiondate = models.CharField(max_length=10, null=True)
    responsedate = models.CharField(max_length=10, null=True)
    additionalinformationcomment = models.TextField(null=True)
    wipoactiontype = models.TextField(null=True)
    cipoactioncode = models.IntegerField(max_length=3, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_application_disclaimer(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='application_disclaimer', on_delete=models.PROTECT)
    languagecode = models.CharField(max_length=2, null=True)
    disclaimertextsequencenumber = models.IntegerField(max_length=2, null=True)
    disclaimertext = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_application_text(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='application_text', on_delete=models.PROTECT)
    applicationtextcode = models.CharField(max_length=2, null=True)
    sequencenumber = models.IntegerField(max_length=2, null=True)
    secondarysequencenumber = models.IntegerField(max_length=2, null=True)
    applicationtextchangeddate = models.CharField(max_length=10, null=True)
    applicationtextdetails = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_transliteration(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='transliteration', on_delete=models.PROTECT)
    marktransliterationtext = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_footnote(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='footnote', on_delete=models.PROTECT)
    footnotetextlinesequencenumber = models.IntegerField(max_length=2, null=True)
    footnotetextlinedescription = models.TextField(null=True)
    footnotenumber = models.IntegerField(max_length=2, null=True)
    footnotecategorycode = models.IntegerField(max_length=2, null=True)
    footnotechangedate = models.CharField(max_length=10, null=True)
    footnoteregistrationdate = models.CharField(max_length=10, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_footnote_formatted(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='footnote_formatted', on_delete=models.PROTECT)
    footnotenumber = models.IntegerField(max_length=2, null=True)
    footnoteformattedtextsequencenumber = models.IntegerField(max_length=2, null=True)
    footnoteformattedtext = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_heading(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='heading', on_delete=models.PROTECT)
    indexheadingnumber = models.IntegerField(max_length=2, null=True)
    indexheadingcomment = models.TextField(null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_cancellation_case(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='cancellation_case', on_delete=models.PROTECT)
    section4445casenumber = models.IntegerField(max_length=1, null=True)
    legalproceedingtypedescriptioninenglish = models.CharField(max_length=40, null=True)
    legalproceedingtypedescriptioninfrench = models.CharField(max_length=50, null=True)
    section4445filingdate = models.CharField(max_length=10, null=True)
    wiposection4445statuscategorycode = models.IntegerField(max_length=1, null=True)
    section4445statuscode = models.IntegerField(max_length=1, null=True)
    section4445statusdate = models.CharField(max_length=10, null=True)
    entitynameofthelegalproceedingdefendant = models.TextField(null=True)
    defendantlanguagecode = models.CharField(max_length=2, null=True)
    defendantaddressline1 = models.TextField(null=True)
    defendantaddressline2 = models.TextField(null=True)
    defendantaddressline3 = models.TextField(null=True)
    defendantcountrycode = models.CharField(max_length=2, null=True)
    contactnameofdefendant = models.TextField(null=True)
    contactlanguagecodeofdefendant = models.CharField(max_length=2, null=True)
    contactaddressline1ofdefendant = models.TextField(null=True)
    contactaddressline2ofdefendant = models.TextField(null=True)
    contactaddressline3ofdefendant = models.TextField(null=True)
    contactprovincenameofdefendant = models.CharField(max_length=20, null=True)
    contactcountrycodeofdefendant = models.CharField(max_length=2, null=True)
    contactpostalcodeofdefendant = models.CharField(max_length=6, null=True)
    agentnameofdefendant = models.TextField(null=True)
    agentlanguagecodeofdefendant = models.CharField(max_length=2, null=True)
    agentaddressline1ofdefendant = models.TextField(null=True)
    agentaddressline2ofdefendant = models.TextField(null=True)
    agentaddressline3ofdefendant = models.TextField(null=True)
    agentprovincenameofdefendant = models.CharField(max_length=20, null=True)
    agentcountrycodeofdefendant = models.CharField(max_length=2, null=True)
    agentpostalcodeofdefendant = models.CharField(max_length=6, null=True)
    plaintiffname = models.TextField(null=True)
    plaintifflegalname = models.TextField(null=True)
    plaintifflanguagecode = models.CharField(max_length=2, null=True)
    plaintiffaddressline1 = models.TextField(null=True)
    plaintiffaddressline2 = models.TextField(null=True)
    plaintiffaddressline3 = models.TextField(null=True)
    plaintiffcountrycode = models.CharField(max_length=2, null=True)
    contactnameofplaintiff = models.TextField(null=True)
    contactlanguagecodeofplaintiff = models.CharField(max_length=2, null=True)
    contactaddressline1ofplaintiff = models.TextField(null=True)
    contactaddressline2ofplaintiff = models.TextField(null=True)
    contactaddressline3ofplaintiff = models.TextField(null=True)
    contactprovincenameofplaintiff = models.CharField(max_length=20, null=True)
    contactcountrycodeofplaintiff = models.CharField(max_length=2, null=True)
    contactpostalcodeofplaintiff = models.CharField(max_length=6, null=True)
    agentnumberofplaintiff = models.IntegerField(max_length=10, null=True)
    agentnameofplaintiff = models.TextField(null=True)
    agentlanguagecodeofplaintiff = models.CharField(max_length=2, null=True)
    agentaddressline1ofplaintiff = models.TextField(null=True)
    agentaddressline2ofplaintiff = models.TextField(null=True)
    agentaddressline3ofplaintiff = models.TextField(null=True)
    agentaddressline3ofplaintiff = models.CharField(max_length=20, null=True)
    agentcountrycodeofplaintiff = models.CharField(max_length=2, null=True)
    agentpostalcodeofplaintiff = models.CharField(max_length=6, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_cancellation_case_action(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='cancellation_case_action', on_delete=models.PROTECT)
    additionalcomment = models.TextField(null=True)
    proceedingeffectivedate = models.CharField(max_length=10, null=True)
    section4445casenumber = models.IntegerField(max_length=1, null=True)
    legalproceedingtypedescriptioninenglish = models.CharField(max_length=40, null=True)
    legalproceedingtypedescriptioninfrench = models.CharField(max_length=50, null=True)
    section4445filingdate = models.CharField(max_length=10, null=True)
    wiposection4445statuscategorycode = models.IntegerField(max_length=1, null=True)
    section4445statuscode = models.IntegerField(max_length=1, null=True)
    section4445statusdate = models.CharField(max_length=10, null=True)
    section4445stagecode = models.IntegerField(max_length=3, null=True)
    section4445casestatus = models.TextField(null=True)
    section4445actionscode = models.CharField(max_length=3, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_opposition_case(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='opposition_case', on_delete=models.PROTECT)
    oppositioncasenumber = models.IntegerField(max_length=2, null=True)
    oppositioncasetypeenglishname = models.CharField(max_length=25, null=True)
    oppositioncasetypefrenchname = models.CharField(max_length=30, null=True)
    oppositiondate = models.CharField(max_length=10, null=True)
    wipooppositioncasestatus = models.CharField(max_length=30, null=True)
    oppositionwipostatusdate = models.CharField(max_length=10, null=True)
    wipooppositionstatuscategory = models.IntegerField(max_length=1, null=True)
    oppositioncasestatuscode = models.IntegerField(max_length=1, null=True)
    cipooppositionstatusdate = models.CharField(max_length=10, null=True)
    entitynameoftheoppositionproceedingdefendant = models.TextField(null=True)
    defendantlanguagecode = models.CharField(max_length=2, null=True)
    defendantaddressline1 = models.TextField(null=True)
    defendantaddressline2 = models.TextField(null=True)
    defendantaddressline3 = models.TextField(null=True)
    defendantcountrycode = models.CharField(max_length=2, null=True)
    contactnameofdefendant = models.TextField(null=True)
    contactlanguagecodeofdefendant = models.CharField(max_length=2, null=True)
    contactaddressline1ofdefendant = models.TextField(null=True)
    contactaddressline2ofdefendant = models.TextField(null=True)
    contactaddressline3ofdefendant = models.TextField(null=True)
    contactprovincenameofdefendant = models.CharField(max_length=20, null=True)
    contactcountrycodeofdefendant = models.CharField(max_length=2, null=True)
    contactpostalcodeofdefendant = models.CharField(max_length=6, null=True)
    agentnameofdefendant = models.TextField(null=True)
    agentlanguagecodeofdefendant = models.CharField(max_length=2, null=True)
    agentaddressline1ofdefendant = models.TextField(null=True)
    agentaddressline2ofdefendant = models.TextField(null=True)
    agentaddressline3ofdefendant = models.TextField(null=True)
    agentprovincenameofdefendant = models.CharField(max_length=20, null=True)
    agentcountrycodeofdefendant = models.CharField(max_length=2, null=True)
    agentpostalcodeofdefendant = models.CharField(max_length=6, null=True)
    plaintiffname = models.TextField(null=True)
    plaintifflegalname = models.TextField(null=True)
    plaintifflanguagecode = models.CharField(max_length=2, null=True)
    plaintiffaddressline1 = models.TextField(null=True)
    plaintiffaddressline2 = models.TextField(null=True)
    plaintiffaddressline3 = models.TextField(null=True)
    plaintiffcountrycode = models.CharField(max_length=2, null=True)
    contactnameofplaintiff = models.TextField(null=True)
    contactlanguagecodeofplaintiff = models.CharField(max_length=2, null=True)
    contactaddressline1ofplaintiff = models.TextField(null=True)
    contactaddressline2ofplaintiff = models.TextField(null=True)
    contactaddressline3ofplaintiff = models.TextField(null=True)
    contactprovincenameofplaintiff = models.CharField(max_length=20, null=True)
    contactcountrycodeofplaintiff = models.CharField(max_length=2, null=True)
    contactpostalcodeofplaintiff = models.CharField(max_length=6, null=True)
    agentnumberofplaintiff = models.IntegerField(max_length=10, null=True)
    agentnameofplaintiff = models.TextField(null=True)
    agentlanguagecodeofplaintiff = models.CharField(max_length=2, null=True)
    agentaddressline1ofplaintiff = models.TextField(null=True)
    agentaddressline2ofplaintiff = models.TextField(null=True)
    agentaddressline3ofplaintiff = models.TextField(null=True)
    agentaddressline3ofplaintiff = models.CharField(max_length=20, null=True)
    agentcountrycodeofplaintiff = models.CharField(max_length=2, null=True)
    agentpostalcodeofplaintiff = models.CharField(max_length=6, null=True)
    id = models.IntegerField(primary_key=True, null=False)

class tm_opposition_case_action(models.Model):
    applicationnumber = models.ForeignKey(tm_main, related_name='opposition_case_action', on_delete=models.PROTECT)
    additionalcomment = models.TextField(null=True)
    proceedingeffectivedate = models.CharField(max_length=10, null=True)
    oppositioncasenumber = models.IntegerField(max_length=1, null=True)
    oppositioncasetypeenglishname = models.CharField(max_length=30, null=True)
    oppositioncasetypefrenchname = models.CharField(max_length=40, null=True)
    oppositiondate = models.CharField(max_length=10, null=True)
    wipooppositioncasestatus = models.CharField(max_length=50, null=True)
    oppositionwipostatusdate = models.CharField(max_length=10, null=True)
    wipooppositionstatuscategory = models.IntegerField(max_length=1, null=True)
    oppositioncasestatuscode = models.IntegerField(max_length=1, null=True)
    section4445actionscode = models.CharField(max_length=3, null=True)
    cipooppositionstatusdate = models.CharField(max_length=10, null=True)
    oppositionstagecode = models.IntegerField(max_length=3, null=True)
    oppositionactioncategory = models.CharField(max_length=50, null=True)
    oppositionactioncode = models.IntegerField(max_length=3, null=True)
    id = models.IntegerField(primary_key=True, null=False)
